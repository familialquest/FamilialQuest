<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AccountService</name>
    </assembly>
    <members>
        <member name="T:AccountService.Models.DBWorker">
            <summary>
            Класс для работы с БД
            </summary>
        </member>
        <member name="M:AccountService.Models.DBWorker.CheckUserIsInGroup(System.Guid)">
            <summary>
            Проверка состоит ли целевой пользователь в группе
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Guid группы или null</returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetUserPasswordHash(System.Guid)">
            <summary>
            Получение хэша пароля пользователя
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.SetAccessToken(CommonTypes.Account)">
            <summary>
            Перезапись токена сессии
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.CheckAccountExist(System.String)">
            <summary>
            Проверка наличия в системе записи об аккаунте
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.CheckTempAccountExist(System.String)">
            <summary>
            Проверка наличия в системе временной записи об аккаунте
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.InsertAccount(CommonTypes.Account)">
            <summary>
            Добавление записи об аккаунте
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.InsertTempAccount(CommonTypes.Account)">
            <summary>
            Добавление временной записи об аккаунте
            </summary>
            <param name="inputTempAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.RemoveTempAccount(System.String)">
            <summary>
            Удаление временной записи об аккаунте
            </summary>
            <param name="email"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetAccount(System.String)">
            <summary>
            Получение записи об аккаунте по логину
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetAccountById(System.Guid)">
            <summary>
            Получение записи об аккаунте по идентификатору пользователя
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetTempAccount(System.String)">
            <summary>
            Получение временной записи об аккаунте по логину/email-у
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.ChangePassword(CommonTypes.Account)">
            <summary>
            Изменение пароля
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.ResetPassword(CommonTypes.Account)">
            <summary>
            Cброс пароля
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.ResetToken(CommonTypes.Account)">
            <summary>
            Обновление полей записи аккаунта
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.ChangeEmail(CommonTypes.Account)">
            <summary>
            Изменение email
            </summary>
            <param name="inputAccount"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.CreateUser(CommonTypes.User)">
            <summary>
            Создание нового пользователя
            </summary>
            <param name="inputUser"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.UpdateUser(CommonTypes.User)">
            <summary>
            Обновление информации о пользователях
            </summary>
            <param name="inputUser"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.RemoveUser(System.Guid,System.Guid)">
            <summary>
            Удаление пользователей
            </summary>
            <param name="groupId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetAllUsers(System.Guid)">
            <summary>
            Получение всех пользователей группы
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.GetUsersById(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Получение указанных пользователей
            </summary>
            <param name="groupId"></param>
            <param name="usersId"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Models.DBWorker.RemoveOldTempAccounts">
            <summary>
            Удаление временных записей с истекшим сроком действия кода подтверждения
            </summary>
        </member>
        <member name="M:AccountService.Models.DBWorker.RemoveOldTokens">
            <summary>
            Очистка истекших токенов-авторизации
            </summary>
        </member>
        <member name="M:AccountService.Program.CheckOldRows">
            <summary>
            Таск периодически проверяет и удаляет из таблицы Accounts протухшие токены и ...
            </summary>
            <returns></returns>
        </member>
        <member name="T:AccountService.Services.AccountServices">
            <summary>
            Вся работа по пользователям и их аккаунтам
            </summary>
        </member>
        <member name="M:AccountService.Services.AccountServices.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Default constructor with HTTPContext
            </summary>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.GetAccountFromPostData(System.Object)">
            <summary>
            Дессериализация Account-а
            </summary>
            <param name="inputParams">Json объект</param>
            <returns>Экземпляр Account</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.GetUserFromPostData(System.Object)">
            <summary>
            Дессериализация User 
            </summary>
            <param name="inputParams">Json</param>
            <returns>User</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.CreateTempAccount(CommonLib.FQRequestInfo)">
            <summary>
            Создание временной учетной записи при запросе на регистрацию.
            </summary>
            <param name="ri">Login, PasswordHash</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.ConfirmTempAccount(CommonLib.FQRequestInfo)">
            <summary>
            Подтверждение операции регистрации главного аккаунта
            </summary>
            <param name="ri">Login, ConfirmCode</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.ResetPasswordCreateTempAccount(CommonLib.FQRequestInfo)">
            <summary>
            Создание временной учетной записи при запросе на сброс пароля
            </summary>
            <param name="ri">Login, PasswordHash</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.ResetPasswordConfirmTempAccount(CommonLib.FQRequestInfo)">
            <summary>
            Подтверждение операции сброса пароля.
            </summary>
            <param name="ri">Login, ConfirmCode</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.GenerateConfirmCode">
            <summary>
            //Генерация проверочного кода
            </summary>
            <returns>Проверочный код 6 цифр</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.Auth(CommonLib.FQRequestInfo)">
            <summary>
            Аутентификация клиента
            </summary>
            <param name="ri">FQRequestInfo с Login и PasswordHash или tokenB64</param>
            <returns>FQResponseInfo c userId и tokenB64</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.Logout(CommonLib.FQRequestInfo)">
            <summary>
            Логаут
            </summary>
            <param name="ri">FQRequestInfo с Login и tokenB64</param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.VerifyToken(CommonLib.FQRequestInfo)">
            <summary>
            Проверка токена сессии
            </summary>
            <param name="ri">Login, token</param>
            <returns>FQRequestInfo с заполненным контекстом пользователя</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.VerifyPassword(CommonLib.FQRequestInfo)">
            <summary>
            Проверка хэша пароля
            </summary>
            <param name="ri"></param>
            <returns>FQRequestInfo с заполненным контекстом пользователя</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.CreateToken">
            <summary>
            Создание нового токена
            </summary>
            <returns>token base64</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.RemoveToken(System.Guid)">
            <summary>
            Сброс токена сессии для указанного пользователя в группе клиента
            </summary>
        </member>
        <member name="M:AccountService.Services.AccountServices.ChangeSelfPassword(CommonLib.FQRequestInfo,CommonTypes.Account)">
            <summary>
            Изменение своего пароля аутентифицированным клиентом
            </summary>
            <param name="inputAccount">Account с PasswordHashCurrent и PasswordHashNew</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.ChangeGroupUserPassword(CommonLib.FQRequestInfo,CommonTypes.Account)">
            <summary>
            Изменение пароля члена группы
            </summary>
            <param name="inputAccount">Account с userId и PasswordHashNew целевого пользователя</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.ChangeEmail(CommonLib.FQRequestInfo,CommonTypes.Account)">
            <summary>
            Изменение своего пароля аутентифицированным клиентом
            </summary>
            <param name="inputAccount">Account с PasswordHashCurrent и новым Email</param>
        </member>
        <member name="M:AccountService.Services.AccountServices.UpdateUser(CommonLib.FQRequestInfo)">
            <summary>
            Обновление свойств пользователя
            </summary>
            <param name="ri"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.WriteOffCost(CommonLib.FQRequestInfo)">
            <summary>
            Списание стоимости награды
            </summary>
            <param name="ri"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.MakePayment(CommonLib.FQRequestInfo)">
            <summary>
            Списание стоимости награды
            </summary>
            <param name="ri"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.GetAllUsers(CommonLib.FQRequestInfo)">
            <summary>
             Получение всех пользователей группы
            </summary>
            <param name="ri"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.GetUsersById(CommonLib.FQRequestInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            Получение указанных пользователей группы
            </summary>
            <param name="ri"></param>
            <param name="requestedUsers"></param>
            <returns></returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.AddNewUserToCurrentGroup(CommonLib.FQRequestInfo)">
            <summary>
            Комплексная операция по созданию нового пользователя и аккаунта
            </summary>
            <param name="ri"></param>
            <returns>Идентификатор пользователя</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.RemoveUserAndAccount(CommonLib.FQRequestInfo)">
            <summary>
            Комплексная операция по удалению пользователя и аккаунта
            </summary>
            <param name="ri"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.AddUserToGroup(CommonLib.FQRequestInfo,CommonTypes.User)">
            <summary>
            Добавление нового пользователя в группу владельца
            </summary>
            <param name="ri"></param>
            <param name="inputUser"></param>
            <returns>Guid созданого пользователя</returns>
        </member>
        <member name="M:AccountService.Services.AccountServices.RemoveRelatedItems(CommonLib.FQRequestInfo,System.Guid)">
            <summary>
            Удаление связаных сущностей
            </summary>
            <param name="ri"></param>
            <param name="removingUserId"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.VerifyLogin(System.String)">
            <summary>
            Проверка что логин - это емаил адрес
            </summary>
            <param name="login"></param>
        </member>
        <member name="M:AccountService.Services.AccountServices.GetPasswordHash(System.String,System.String)">
            <summary>
            Подсчет хэша пароля
            </summary>
            <param name="login"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:AccountService.Services.IAccountServices">
            <summary>
            Интерфейс сервиса
            </summary>
        </member>
    </members>
</doc>
